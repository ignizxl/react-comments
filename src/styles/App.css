/* o root é uma pseudoclasse CSS que representa o elemento pai de nível mais alto no documento HTML. É frequentemente usado para definir estilos globais e variáveis ​​CSS. */
:root {
  --background-body: #e5e5e5;
  --background-content: #1d1d1d;
  --text-color: #292929;
  --primary-color: #4dff7c;
  --second-color: #89ddff;

  /* Ao definir essas variáveis ​​em :rootnível, elas se tornam variáveis ​​globais que podem ser facilmente acessadas e reutilizadas em todo o processo. */
}

/* estilizando o body */
body {
  /* removenedo qualquer margem padrão que os navegadores possam aplicar ao elemento body */
  margin: 0;
  /* definindo o tamanho e a família de fontes. Segue abaixo a lista de fontes */
  font-size: 1rem;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;

  /* define a suavização da fonte-webkit-font-smoothing. Melhora a aparência do texto */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  /* define a cor de fundo do elemento body ao valor da variável CSS */
  background-color: var(--background-body);
  color: var(--text-color);
}

/* estilizando o header */
header {
  /* definindo o posicionamento do header como fixo. Um elemento de posição fixa é posicionado em relação à janela do navegador e não se move quando a página é rolada. */
  position: fixed;
  /* define a largura de como header 100%, garantindo que ela abranja toda a largura do elemento que o contém. */
  width: 100%;
  /* define a altura do header para 3,5rem. */
  height: 3.5rem;
  top: 0px;
  left: 0px;
  background-color: var(--background-content);
  color: var(--background-body);
  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.3);
  /* definindo a ordem de empilhamento (índice z) dos arquivos header. */
  z-index: 10;

  /* esse código CSS estiliza um cabeçalho fixo com altura, largura, cor de fundo, cor de texto consistentes e uma sombra de caixa. */
}

/* estilizando um elemento com a classe .header__content */
.header__content {
  /* definindo a largura máxima do elemento em 1280 pixels. */
  max-width: 1280px;
  /* definindo o preenchimento do elemento. */
  padding: 0 1rem;
  /* centralizando o elemento horizontalmente dentro do elemento que o contém, definindo as margens esquerda e direita como "auto". */
  margin: auto;
  /* definindo um 'contêiner' flexível. Permitindo o uso de propriedades flexbox para controlar o layout de seus elementos. */
  display: flex;
  /* flex container */
  justify-content: space-between;
  align-items: center;
  /* definindo o posicionamento */
  position: relative;
  /* definindo a altura do elemento */
  height: 3.5rem;
}

.logo {
  /* este código CSS estiliza um elemento com o .logo definindo o tamanho da fonte, tornando-o um contêiner flexível para fácil controle de layout */
  font-size: 20px;
  display: flex;
  gap: 0.5rem;
  align-items: center;
  color: var(--background-body);
}

main {
  width: 80%;
  margin: auto;
  margin-bottom: 3rem;
  margin-top: 4.5rem;
  padding: 2rem;
  /* background-color: var(--background-content); */
  /* box-shadow: rgba(0, 0, 0, 0.05) 0px 6px 24px 0px, rgba(0, 0, 0, 0.08) 0px 0px 0px 1px; */
  border-radius: 3px;

  /* essa estilização está estilizando o elemento 'main' ajustando sua largura, centralizando-o horizontalmente, fornecendo margens superior e inferior para espaçamento, adicionando preenchimento ao redor do conteúdo e deixando uma borda um pouco arredondada.  */
}

form {
  width: fit-content;
  margin: auto;

  /* este código CSS estiliza o form, deixando o form tão largo quanto seu conteúdo e centralizando-o horizontalmente dentro de seu conteúdo. */
}

input,
select {
  border: none;
  border-radius: 3px;
  padding: 6px;
  margin: 0 6px;

  /* este código CSS fornece um estilo limpo e uniforme para o input e o select. Ele remove bordas, arredonda os cantos, adiciona preenchimento para espaçamento interno e inclui alguma margem para espaçamento entre elementos de formulário. */
}

h3 {
  text-align: center;
  margin-top: 0;

  /* este código CSS centraliza o texto dentro de todos os elementos 'h3' e remove qualquer margem superior padrão que possa afetar a vertical dos elemetos 'h3'. */
}

button {
  /* definindo a cor de fundo do botão para o valor da variável --second-color */
  background-color: var(--second-color);
  /* definindo a cor do texto */
  color: var(--text-color);
  border: none;
  /* alterando o estilo do cursor para um ponteiro ao passar o mouse sobre o botão */
  cursor: pointer;
  /* definindo o raio da borda  */
  border-radius: 3px;
  /* definindo a espessura da fonte do texto do botão como negrito. */
  font-weight: bold;
}

.buttons {
  /* define a largura */
  width: 100%;
  /*  definindo o elemento como um contêiner flexível */
  display: flex;
  justify-content: space-around;
  gap: 0.5rem;
}

.btn-submit {
  /* define a cor de fundo dos elementos da classe .btn-submit */
  background-color: var(--primary-color);
  /* define o preenchimento dos elementos com a classe ..btn-submit */
  padding: 6px 12px;
  /* altera o estilo do cursor para um ponteiro ao passar o mouse sobre os elementos */
  cursor: pointer;
  /* define a espessura da fonte  */
  font-weight: bolder;
}

button:hover,
.btn-submit:hover {
  /* aplicando estilos quando o usuário passar o mouse sobre o botão. */
  opacity: 0.8;
}

.all-users {
  margin-top: 3rem;
}

.titles,
.row {
  width: 100%;
  /* os contêineres Flex permitem fácil controle do layout e alinhamento de seus elementos filhos usando propriedades flexbox. */
  display: flex;
  text-align: center;
}
.titles {
  /* define a espessura da fonte, cor de fundo e a cor */
  font-weight: bold;
  background-color: var(--text-color);
  color: var(--background-body);
}

.titles div,
.row input,
.row select,
.row div {
  width: 20%;
  /* define o preenchimento dos elementos */
  padding: 0.5rem;
}

.hide-form {
  display: none;
}

@media screen and (max-width: 920px) {
  main {
    width: 90%;
  }
}

@media screen and (max-width: 520px) {
  main {
    /* elementos responsivos a diferentes tamanhos de tela. Quando o main está definido como 90% e quando a largura da tela for 520 pixels ou menos, a largura será definida como 100%. */
    width: 100%;
  }
}
